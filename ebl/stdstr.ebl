;;;
;;; String algorithms
;;;

(require "ebl/stdutil.ebl")

(namespace std
  (defn substr (str first last)
    "(substr str begin end) -> substring from (begin, end)"
    (apply string
           ((lambda (index lat)
              (if (equal? index first)
                  lat
                  (let ((next (decr index)))
                    (recur next (cons (get str next) lat)))))
            last null)))

  (defn split (str delim)
    "(split str delim) -> list of substrings, by cleaving str at delim"
    ((lambda (index partial result)
       (if (equal? index -1)
           (if partial
               (cons (apply string partial) result)
               result)
           (let ((current (get str index)))
             (if (equal? current delim)
                 (recur (decr index) null (cons (apply string partial) result))
                 (recur (decr index) (cons current partial) result)))))
     (- (length str) 1) null null))

  (defn join (lat delim)
    "(join list delim) -> string, by concatenating each elem in list, with delim in between"
    ((lambda (lat result)
       (if (null? lat)
           result
           (recur (cdr lat)
                  (if result
                      (string result delim (car lat))
                      (string (car lat))))))
     lat false)))
